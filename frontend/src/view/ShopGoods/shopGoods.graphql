fragment shopGoodsItem on ShopGoods{
  id
  name
  remark
  createdAt
}

# 获取商品分页
query getShopGoodsList($first: Int, $cursor: Cursor) {
  shopGoodsCollection(first: $first, after: $cursor) {
    edges {
      cursor
      node {
        ...shopGoodsItem
      }
    }
    pageInfo {
      startCursor
      endCursor
      hasPreviousPage
      hasNextPage
    }
    totalCount
  }
}

# 获取所有商品
query getShopGoodsListAll($first: Int, $cursor: Cursor) {
  shopGoodsCollection(first: $first, after: $cursor) {
    edges {
      cursor
      node {
        ...shopGoodsItem
      }
    }
    totalCount
  }
}

# 添加商品
mutation insertIntoShopGoods($input: ShopGoodsInsertInput!) {
  insertIntoShopGoodsCollection(objects: [$input]) {
    affectedCount
  }
}

# 修改商品
mutation updateShopGoods($filter: ShopGoodsFilter, $input: ShopGoodsUpdateInput!) {
  updateShopGoodsCollection(set: $input, filter: $filter, atMost: 1) {
    affectedCount
    records{
      id
      name
      remark
    }
  }
}

# 用户商品使用
fragment shopGoodsUsage on MemberShopGoodsUsage{
  memberId
  shopGoodsId
  usageCount
  createdAt
}

# 添加用户商品使用
mutation insertIntoMemberShopGoodsUsage($input: MemberShopGoodsUsageInsertInput!) {
  insertIntoMemberShopGoodsUsageCollection(objects: [$input]) {
    affectedCount
    records {
      id
      memberId
      shopGoodsId
      usageCount
    }
  }
}

# 修改用户商品使用
mutation updateMemberShopGoodsUsage($filter: MemberShopGoodsUsageFilter, $input: MemberShopGoodsUsageUpdateInput!) {
  updateMemberShopGoodsUsageCollection(set: $input, filter: $filter, atMost: 1) {
    affectedCount
    records{
      id
      memberId
      shopGoodsId
      usageCount
    }
  }
}

